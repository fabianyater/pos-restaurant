openapi: 3.0.0
info:
  title: Users API
  description: API for managing user interactions in the restaurant system.
  version: "1.0.0"
servers:
  - url: 'https://yourdomain.com/api/v1'
paths:
  /users:
    get:
      summary: Gets a list of users
      operationId: listUsers
      tags:
        - Users
      responses:
        '200':
          description: A list of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      summary: Creates a new user
      operationId: createUser
      tags:
        - Users
      requestBody:
        description: The user to create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: User created
  /users/{userId}:
    get:
      summary: Gets a user by ID
      operationId: getUserById
      tags:
        - Users
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    put:
      summary: Updates a user
      operationId: updateUser
      tags:
        - Users
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: The user update info
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '204':
          description: User updated
    delete:
      summary: Deletes a user
      operationId: deleteUser
      tags:
        - Users
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: User deleted
components:
  schemas:
    User:
      type: object
      required:
        - id
        - name
        - role
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        role:
          type: string
          enum: [admin, waiter]
      example:
        id: '123e4567-e89b-12d3-a456-426614174000'
        name: 'John Doe'
        role: 'admin'
